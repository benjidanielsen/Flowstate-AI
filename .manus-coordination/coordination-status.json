{
  "coordination_system": {
    "version": "1.0",
    "last_updated": "2024-01-01T12:00:00Z",
    "status": "ACTIVE",
    "coordination_method": "file_based_sync"
  },
  
  "manus_instances": {
    "manus_1": {
      "role": "speed_developer",
      "status": "UNKNOWN - NEEDS UPDATE",
      "current_task": "UNKNOWN",
      "branch": "UNKNOWN",
      "last_update": "UNKNOWN",
      "progress": "UNKNOWN",
      "next_sync": "UNKNOWN",
      "completed_work": [],
      "current_files": [],
      "message_to_manus_2": "Please update your status - I need to coordinate with you",
      "blocking_issues": "Need status update to proceed safely"
    },
    
    "manus_2": {
      "role": "quality_enhancer",
      "status": "STOPPED - AWAITING COORDINATION", 
      "current_task": "Created knowledge base and coordination system",
      "branch": "manus-2-quality (not created yet)",
      "last_update": "2024-01-01T12:00:00Z",
      "progress": "Knowledge base complete, waiting for Manus #1 status",
      "next_sync": "2024-01-01T12:30:00Z",
      "completed_work": [
        "AI Democracy System (ai-gods/ai-democracy-system.py)",
        "Business Impact Dashboard (business-dashboard/boss-dashboard.py)",
        "AI Monitoring Dashboard (godmode-dashboard/app.py)", 
        "Collective Memory System (ai-gods/collective-memory-system.py)",
        "Communication Hub (ai-gods/ai-communication-hub.py)",
        "GODMODE Scripts (GODMODE-START.bat/sh)",
        "Comprehensive Knowledge Base (MANUS_KNOWLEDGE_BASE.md)",
        "Coordination System (.manus-coordination/)"
      ],
      "current_files": [
        "MANUS_KNOWLEDGE_BASE.md",
        ".manus-coordination/coordination-status.json"
      ],
      "message_to_manus_1": "I've created a comprehensive knowledge base and coordination system. Please read MANUS_KNOWLEDGE_BASE.md and update your status here. I have AI systems ready but stopped all work to avoid conflicts. What's your current status and how should we coordinate?",
      "blocking_issues": "Cannot proceed without knowing Manus #1 current state and work"
    }
  },
  
  "work_division": {
    "proposed_strategy": {
      "manus_1_responsibilities": [
        "Core CRM functionality",
        "Frazer Method API implementation", 
        "Basic frontend components",
        "Database operations",
        "User authentication",
        "Main dashboard features"
      ],
      "manus_2_responsibilities": [
        "AI systems and agents",
        "Monitoring dashboards", 
        "Business impact tracking",
        "Quality assurance",
        "Documentation",
        "Testing and optimization",
        "Advanced features"
      ]
    },
    "coordination_points": [
      "API interface definitions",
      "Database schema changes",
      "Component integration",
      "Testing protocols",
      "Deployment procedures"
    ]
  },
  
  "sync_protocol": {
    "update_frequency": "every_30_minutes",
    "sync_method": "file_based_status_updates",
    "conflict_resolution": "discuss_via_user_if_needed",
    "merge_strategy": "branch_based_development",
    "communication_channel": "this_file_and_knowledge_base"
  },
  
  "current_priorities": {
    "immediate": [
      "Establish Manus coordination",
      "Get Manus #1 status update", 
      "Create safe branch strategy",
      "Merge existing work safely"
    ],
    "short_term": [
      "Complete Frazer Method implementation",
      "Test AI democracy system",
      "Deploy monitoring dashboards",
      "Ensure system stability"
    ],
    "long_term": [
      "Advanced AI features",
      "Performance optimization",
      "Mobile responsiveness", 
      "Third-party integrations"
    ]
  },
  
  "safety_protocols": {
    "before_any_work": [
      "Read MANUS_KNOWLEDGE_BASE.md",
      "Check this coordination file",
      "Update your status",
      "Verify no conflicts with other Manus"
    ],
    "during_work": [
      "Update status every 30 minutes",
      "Work only in your assigned branch",
      "Test changes before committing",
      "Document all modifications"
    ],
    "before_pushing": [
      "Update coordination files",
      "Test complete system",
      "Coordinate with other Manus",
      "Use pull requests, not direct push"
    ]
  },
  
  "emergency_procedures": {
    "coordination_failure": "Update status in this file and escalate to user",
    "merge_conflicts": "Stop work, coordinate via user, resolve manually",
    "system_crashes": "Use GODMODE-START scripts to restart",
    "critical_bugs": "Create hotfix branch, coordinate immediate fix"
  }
}
