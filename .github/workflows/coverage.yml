name: coverage
on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: Node coverage (auto)
        run: |
          set -e
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update && sudo apt-get install -y jq >/dev/null
          fi
          found=0
          while IFS= read -r -d '' pkg; do
            dir=$(dirname "$pkg")
            pushd "$dir" >/dev/null
            if jq -e '.scripts["test:coverage"]' package.json >/dev/null 2>&1; then
              npm ci && npm run test:coverage || true
              found=1
            elif jq -e '.scripts["test"]' package.json >/dev/null 2>&1; then
              npm ci && npm test -- --coverage || true
              found=1
            fi
            popd >/dev/null
          done < <(git ls-files -z **/package.json)
          [ $found -eq 0 ] && echo "No Node packages with tests detected."
      - name: Gather lcov
        run: |
          mkdir -p coverage/combined
          find . -name lcov.info -maxdepth 5 -print -exec cp {} coverage/combined/ \; || true

      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Python coverage (auto)
        run: |
          python -m pip install -U pip pytest pytest-cov
          any=0
          while IFS= read -r -d '' t; do
            d=$(dirname "$t")
            any=1
            pushd "$d" >/dev/null
            pytest --cov=. --cov-report=xml || true
            popd >/dev/null
          done < <(git ls-files -z **/tests || true)
          [ $any -eq 0 ] && echo "No Python test dirs detected."
      - name: Collect coverage.xml
        run: |
          find . -name coverage.xml -maxdepth 6 -print -exec cp {} coverage/ \; || true

      - name: Publish summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: |
            coverage/coverage.xml
            coverage/combined/*.xml
          badge: true
          format: markdown
          output: both
      - name: Write PR summary
        if: github.event_name == 'pull_request'
        run: cat code-coverage-results.md >> "$GITHUB_STEP_SUMMARY"
