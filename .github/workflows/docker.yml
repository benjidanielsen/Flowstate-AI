name: Build and Publish Docker Images

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: backend
            context: ./backend
            dockerfile: ./backend/Dockerfile
          - name: frontend
            context: ./frontend
            dockerfile: ./frontend/Dockerfile
          - name: python-worker
            context: ./python-worker
            dockerfile: ./python-worker/Dockerfile
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive image metadata
        id: image-meta
        env:
          CONTEXT: ${{ matrix.context }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          REF_NAME: ${{ github.ref_name }}
        run: |
          raw="${CONTEXT#./}"
          safe="${raw//\//-}"
          if [ -z "$safe" ]; then
            safe="root"
          fi
          safe="${safe,,}"
          owner="${OWNER,,}"
          repo="${REPO,,}"
          image="$REGISTRY/$owner/$repo/$safe"
          tag="${REF_NAME:-latest}"
          echo "suffix=$safe" >> "$GITHUB_OUTPUT"
          echo "image=$image" >> "$GITHUB_OUTPUT"
          echo "tag=$tag" >> "$GITHUB_OUTPUT"
          echo "image-ref=$image:$tag" >> "$GITHUB_OUTPUT"

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
          provenance: false
          tags: ${{ steps.image-meta.outputs.image-ref }}

      - name: Publish image reference
        run: |
          echo "Built image ${{ steps.image-meta.outputs.image-ref }}"
